name: Nix Update Command
on:
  issue_comment:
    types:
      - created
      - edited
  pull_request:
    types:
      - opened
    branches:
      - develop

concurrency: nix-update-${{ github.event.issue.number }}

jobs:
  command:
    # automatically run on renovate and dependabot PRs
    if: "(github.event_name == 'issue_comment' && github.event.comment.body == '/nix-update' && github.event.issue.pull_request) || (github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' || github.actor == 'renovate[bot]')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Check if user is allowed to run the command
        shell: bash
        id: perms
        run: |
          curl --fail -fsSL --output /tmp/allowed-nix-update-users.nix https://github.com/${{ github.repository }}/blob/${{ github.event.repository.default_branch }}/.github/allowed-nix-update-users.nix?raw=true
          echo '${{ toJSON(github) }}' > /tmp/context.json
          if nix eval --expr 'import /tmp/allowed-nix-update-users.nix (builtins.fromJSON (builtins.readFile /tmp/context.json))' --impure; then
            echo "allowed=true" >> "$GITHUB_OUTPUT"
          else
            echo "allowed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Add no permission reacton
        if: "${{ steps.perms.outputs.allowed == 'false' }}"
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: '-1'

      - name: Add okay reaction
        if: "${{ steps.perms.outputs.allowed }}"
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: '+1'


      - if: "${{ steps.perms.outputs.allowed }}"
        name: Get variables
        shell: bash
        id: vars
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(gh pr view -R ${{ github.repository }} ${{ github.event.issue.number }} --json "headRefName,headRefOid,headRepository,headRepositoryOwner")
          branchName=$(echo $response | jq -r '.headRefName')
          branchSha=$(echo $response | jq -r '.headRefOid')
          repoName=$(echo $response | jq -r '.headRepository.name')
          repoOwner=$(echo $response | jq -r '.headRepositoryOwner.login')
          echo "branchName=$branchName" >> "$GITHUB_OUTPUT"
          echo "branchSha=$branchSha" >> "$GITHUB_OUTPUT"
          echo "repoName=$repoName" >> "$GITHUB_OUTPUT"
          echo "repoOwner=$repoOwner" >> "$GITHUB_OUTPUT"

      - if: "${{ steps.perms.outputs.allowed }}"
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: refs/heads/${{ steps.vars.outputs.branchName }}
          repository: ${{ steps.vars.outputs.repoOwner }}/${{ steps.vars.outputs.repoName }}

      - name: Update Nix Files
        if: "${{ steps.perms.outputs.allowed }}"
        run: nix develop --impure .#ci --command "update-nix-package-deps"

      - name: Commit and Push changes
        if: "${{ steps.perms.outputs.allowed }}"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git user
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          export GH_REPO="${{ github.repository }}"

          # Check if any changes were made
          git status
          if [[ -n $(git status -s) ]]; then
            git commit -a -F - <<EOF
          nix: Update generated files

          This commit was automatically generated by [this workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          EOF

            git push

            gh pr comment ${{ github.event.issue.number }} -F - <<EOF || true
          Successfully updated generated nix files! ðŸš€

          Run triggered by @${{ github.event.sender.login }} (${{ github.event.comment.html_url }})
          *This comment was written by a bot!* ðŸ¤–
          EOF
          else
            gh pr comment ${{ github.event.issue.number }} -F - <<EOF || true
          Generated files are up to date! ðŸ‘Œ

          Run triggered by @${{ github.event.sender.login }} (${{ github.event.comment.html_url }})
          *This comment was written by a bot!* ðŸ¤–
          EOF
          fi
